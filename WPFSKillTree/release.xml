<?xml version="1.0" encoding="utf-8" ?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- MSBuild file used by dist-*.bat scripts -->
  <Import Project="$(MSBuildProjectDirectory)\Tools\MSBuild.ExtensionPack.tasks" />

  <PropertyGroup>
    <InstallDir>PoESkillTree</InstallDir>
    <Platform>x86</Platform>
    <WorkDir>$(MSBuildProjectDirectory)\dist</WorkDir>
    <ZipTool>Tools\7z.exe a -tzip</ZipTool>
  </PropertyGroup>

  <PropertyGroup>
    <DistDir>$(WorkDir)\$(InstallDir)</DistDir>
    <TagFile>$(WorkDir)\tag</TagFile>
    <RevisionCountFile>$(WorkDir)\revcount</RevisionCountFile>
  </PropertyGroup>

  <Target Name="Build" DependsOnTargets="Clean">
    <!-- Files updated by this target -->
    <ItemGroup>
      <ApplicationManifest Include="Properties\app.manifest" />
      <AssemblyInfoFiles Include="Properties\AssemblyInfo.cs" />
      <AssemblyInfoFiles Include="..\UpdateDB\Properties\AssemblyInfo.cs" />
    </ItemGroup>

    <!-- Get ProductVersion and AssemblyVersion from Properties\Version.resx -->
    <XmlPeek XmlInputPath="Properties\Version.resx" Query="//root/data[@name='ProductVersion']/value/text()">
      <Output PropertyName="ProductVersion" TaskParameter="Result" />
    </XmlPeek>
    <XmlPeek XmlInputPath="Properties\Version.resx" Query="//root/data[@name='AssemblyVersion']/value/text()">
      <Output PropertyName="AssemblyVersion" TaskParameter="Result" />
    </XmlPeek>

    <!-- Create working directory for release -->
    <MakeDir Directories="$(WorkDir)" />

    <!-- Compare ProductVersion with recent Git tag (version) -->
    <Exec Command="git describe --tags --abbrev=0 >$(TagFile)" />
    <ReadLinesFromFile File="$(TagFile)">
      <Output PropertyName="GitVersion" TaskParameter="Lines" />
    </ReadLinesFromFile>
    <Message Text="%09Release product version: $(ProductVersion)" />
    <Message Text="%09Recent Git version: $(GitVersion)" />
    <Error Text="Release product version and recent Git version are identical!%0APlease, edit ProductVersion of Properties\Version.resx file to reflect a new release."
           Condition="'$(ProductVersion)' == '$(GitVersion)'" />

    <!-- Create FileVersion from ProductVersion using Git revision count as build number -->
    <Exec Command="git rev-list --count HEAD >$(RevisionCountFile)" />
    <ReadLinesFromFile File="$(RevisionCountFile)">
      <Output PropertyName="BuildNumber" TaskParameter="Lines" />
    </ReadLinesFromFile>
    <Message Text="%09Revision count: $(BuildNumber)" />
    <PropertyGroup>
      <!-- Keep only leading digits from Revision of ProductVersion and add format item for BuildNumber -->
      <FormatFileVersion>$([System.Text.RegularExpressions.Regex]::Replace($(ProductVersion), "\.([0-9]+)([a-zA-Z][a-zA-Z0-9]+)?$", ".$1.{0}"))</FormatFileVersion>
      <!-- Set BuildNumber -->
      <FileVersion>$([System.String]::Format($(FormatFileVersion), $(BuildNumber)))</FileVersion>
    </PropertyGroup>

    <!-- Update AssemblyInfo files -->
    <AssemblyInfo AssemblyInfoFiles="@(AssemblyInfoFiles)" UpdateAssemblyInformationalVersion="true"
                  AssemblyVersion="$(AssemblyVersion)"
                  AssemblyFileVersion="$(FileVersion)"
                  AssemblyInformationalVersion="$(ProductVersion)" />

    <!-- Get assembly name from project file -->
    <XmlPeek XmlInputPath="WPFSKillTree.csproj" Query="//p:Project/p:PropertyGroup/p:AssemblyName/text()"
             Namespaces="&lt;Namespace Prefix='p' Uri='http://schemas.microsoft.com/developer/msbuild/2003'/&gt;">
      <Output PropertyName="ProjectAssemblyName" TaskParameter="Result" />
    </XmlPeek>
    <!-- Generate app.manifest -->
    <GenerateApplicationManifest ManifestType="Native" InputManifest="@(ApplicationManifest -> '%(Identity).i')" OutputManifest="@(ApplicationManifest)"
                                 AssemblyName="$(ProjectAssemblyName).exe" AssemblyVersion="$(AssemblyVersion)" />

    <!-- Build projects (OutputPath=$(DistDir) => No copying needed) -->
    <MSBuild Projects="WPFSKillTree.csproj" Targets="Build" Properties="Configuration=Release;Platform=$(Platform);WarningLevel=0;OutputPath=$(DistDir)" />
    <MSBuild Projects="..\UpdateDB\UpdateDB.csproj" Targets="Build" Properties="Configuration=Release;Platform=$(Platform);WarningLevel=0;OutputPath=$(DistDir)" />
  </Target>

  <Target Name="Clean">
    <MSBuild Projects="..\UnitTests\UnitTests.csproj" Targets="Clean" Properties="Configuration=Debug;Platform=$(Platform);WarningLevel=0" />
    <MSBuild Projects="..\UpdateDB\UpdateDB.csproj" Targets="Clean" Properties="Configuration=Release;Platform=$(Platform);WarningLevel=0;OutputPath=$(DistDir)" />
    <MSBuild Projects="WPFSKillTree.csproj" Targets="Clean" Properties="Configuration=Release;Platform=$(Platform);WarningLevel=0;OutputPath=$(DistDir)" />
    <RemoveDir Directories="$(WorkDir)" />
  </Target>

  <Target Name="Release" DependsOnTargets="Test">
    <!-- Download skill tree assets -->
    <Exec Command="$(DistDir)\UpdateDB.exe /A" WorkingDirectory="$(DistDir)" />

    <!-- Create release package -->
    <Exec Command="..\$(ZipTool) $(InstallDir)-$(ProductVersion).zip $(InstallDir)" WorkingDirectory="$(WorkDir)" />
  </Target>

  <Target Name="Test" DependsOnTargets="Build">
    <!-- Build unit tests using project defined output path -->
    <MSBuild Projects="..\UnitTests\UnitTests.csproj" Targets="Build" Properties="Configuration=Debug;Platform=$(Platform);WarningLevel=0" />

    <!-- Run tests -->
    <Exec Command='vstest.console ..\..\UnitTests\bin\Debug\UnitTests.dll /TestCaseFilter:"TestCategory!=RequireGUI"' WorkingDirectory="$(WorkDir)" />
  </Target>

  <Target Name="Update">
    <!-- Make regular build using project defined output path -->
    <MSBuild Projects="..\UpdateDB\UpdateDB.csproj" Targets="Build" Properties="Configuration=Release;Platform=$(Platform);WarningLevel=0" />

    <!-- Update items database -->
    <Exec Command="..\UpdateDB\bin\Release\UpdateDB.exe /N" />

    <!-- Make regular clean using project defined output path -->
    <MSBuild Projects="..\UpdateDB\UpdateDB.csproj" Targets="Clean" Properties="Configuration=Release;Platform=$(Platform);WarningLevel=0" />
  </Target>
</Project>
